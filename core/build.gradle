plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-kapt'
}

android {
    compileSdk versions.targetSdk

    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }
    defaultConfig {
        minSdk versions.minSdk
        targetSdk versions.targetSdk
        versionCode versions.appCode
        versionName versions.appName
        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            debuggable false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            debuggable true
            minifyEnabled false
            ext.alwaysUpdateBuildId = false
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    api 'androidx.multidex:multidex:2.0.1'
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    testImplementation 'junit:junit:4.+'

    api "com.soywiz.korlibs.klock:klock-android:2.2.2"

    api "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycle"
    api "androidx.lifecycle:lifecycle-viewmodel-savedstate:$versions.lifecycle"
    api "androidx.lifecycle:lifecycle-livedata-ktx:$versions.lifecycle"
    api "androidx.lifecycle:lifecycle-runtime-ktx:$versions.lifecycle"
    api "androidx.lifecycle:lifecycle-common-java8:$versions.lifecycle"
    api "androidx.lifecycle:lifecycle-service:$versions.lifecycle"
    api "androidx.lifecycle:lifecycle-process:$versions.lifecycle"

    api "org.jetbrains.kotlinx:kotlinx-coroutines-core:${versions.coroutines}"
    debugApi "com.github.chuckerteam.chucker:library:${versions.chucker}"
    releaseApi "com.github.chuckerteam.chucker:library-no-op:${versions.chucker}"

    api 'org.greenrobot:eventbus:3.2.0'
    api 'com.blankj:utilcode:1.30.6'
    api platform('com.google.firebase:firebase-bom:28.3.0')
    api "com.google.firebase:firebase-crashlytics-ktx"
    api 'com.google.firebase:firebase-analytics-ktx'
    api "com.google.firebase:firebase-dynamic-links-ktx"
    api 'com.google.android.play:core-ktx:1.8.1'

    api "io.insert-koin:koin-android:${versions.koin}"
    api "io.insert-koin:koin-android-compat:${versions.koin}"
    api "io.insert-koin:koin-androidx-workmanager:${versions.koin}"

    api "com.thinkinglogic.builder:kotlin-builder-annotation:$versions.builderAnno"
    kapt "com.thinkinglogic.builder:kotlin-builder-processor:$versions.builderAnno"

    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    api "com.squareup.retrofit2:retrofit:${versions.retrofit}"
    api "com.squareup.retrofit2:converter-moshi:${versions.retrofit}"
    api "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2"

    api(platform("com.squareup.okhttp3:okhttp-bom:4.9.0"))
    api("com.squareup.okhttp3:okhttp")
    api("com.squareup.okhttp3:logging-interceptor")
    api("com.squareup.okhttp3:okhttp-urlconnection")

    api "com.squareup.moshi:moshi-kotlin:${versions.moshi}"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:${versions.moshi}"
}